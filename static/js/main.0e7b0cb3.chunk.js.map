{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","this","visibleGoods","goods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,4CAOE,WAAU,IAAD,OACP,EAA4CC,KAAKL,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBG,EA5CV,SACEC,EACAJ,EACAD,GAGA,IAAMI,EAAY,YAAOC,GAkBzB,OAfAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKN,EAASc,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITZ,GACFI,EAAaS,UAGRT,EAoBgBU,CACnBlB,EACAK,EACAD,GAGF,OACE,qBAAKe,UAAU,MAAf,SACGhB,EAEG,wBACEiB,KAAK,SACLC,QACE,kBAAM,EAAKC,UAAS,SAAApB,GAClB,MAAO,CAAEC,WAAYD,EAAMC,eAJjC,mBAYA,qCACE,wBACEiB,KAAK,SACLC,QACE,kBAAM,EAAKC,SAAS,CAAEjB,SAAUN,EAASc,WAH7C,iCASA,wBACEO,KAAK,SACLC,QACE,kBAAM,EAAKC,SAAS,CAAEjB,SAAUN,EAASgB,UAH7C,4BASA,wBACEK,KAAK,SACLC,QACE,kBAAM,EAAKC,UAAS,SAAApB,GAClB,MAAO,CAAEE,YAAaF,EAAME,gBAJlC,qBAWA,wBACEgB,KAAK,SACLC,QACE,kBAAM,EAAKC,SAAS,CAClBjB,SAAUN,EAASO,KACnBF,YAAY,KALlB,mBAYA,oBAAIe,UAAU,QAAd,SACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACEL,UAAU,cADZ,SAIGK,GAFIA,iBA9EzB,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0e7b0cb3.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: true,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {isStarted\n          ? (\n            <button\n              type=\"button\"\n              onClick={\n                () => this.setState(state => {\n                  return { isStarted: !state.isStarted };\n                })\n              }\n            >\n              Start\n            </button>\n          )\n          : (\n            <>\n              <button\n                type=\"button\"\n                onClick={\n                  () => this.setState({ sortType: SortType.ALPABET })\n                }\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={\n                  () => this.setState({ sortType: SortType.LENGTH })\n                }\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={\n                  () => this.setState(state => {\n                    return { isReversed: !state.isReversed };\n                  })\n                }\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={\n                  () => this.setState({\n                    sortType: SortType.NONE,\n                    isReversed: false,\n                  })\n                }\n              >\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {visibleGoods.map(good => (\n                  <li\n                    className=\"Goods__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}